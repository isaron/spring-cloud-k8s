server.port=8888
eureka.instance.hostname=eureka.ssii.com
eureka.client.registerWithEureka=false
eureka.client.fetchRegistry=false
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
spring.application.name=eureka-server
#renew\u9891\u7387\uff0c\u5411Eureka\u670d\u52a1\u53d1\u9001renew\u4fe1\u606f\uff0c\u9ed8\u8ba430\u79d2
eureka.instance.leaseRenewalIntervalInSeconds=10
#\u670d\u52a1\u5931\u6548\u65f6\u95f4\uff0cEureka\u591a\u957f\u65f6\u95f4\u6ca1\u6536\u5230\u670d\u52a1\u7684renew\u64cd\u4f5c\uff0c\u5c31\u5254\u9664\u8be5\u670d\u52a1\uff0c\u9ed8\u8ba490\u79d2
eureka.instance.leaseExpirationDurationInSeconds=15
#manager url:http://localhost:8761/

server:
  port: 8761
eureka:
  instance:
    hostname: ${EUREKA_HOST_NAME:peer1} #服务主机名
    appname: ${spring.application.name} #服务名称，默认为 unknow 这里直接取 spring.application.name 了
  client:
    register-with-eureka: ${BOOL_REGISTER:true} # 是否把服务中心本身当做eureka client 注册。默认为true
    fetch-registry: ${BOOL_FETCH:true} # 是否拉取 eureka server 的注册信息。 默认为true
    service-url:
      defaultZone: ${EUREKA_URL_LIST:http://peer1:8761/eureka/} # 指定服务中心 eureka server的地址
  server:
    enable-self-preservation: ${SELF_PRESERVATION:true} # 是否开启自我保护。 默认为 true.

spring:
  application:
    name: ${EUREKA_APPLICATION_NAME:eureka-server}